//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit
import Swinject

class {{ module_info.name }}ModuleAssembler: Assembly {
    
    func assemble(container: Container) {

        container.register({{ module_info.name }}Interactor.self) { ( _, presenter: {{ module_info.name }}Presenter) in

            let interactor = {{ module_info.name }}Interactor()
            interactor.output = presenter
            
            return interactor
        }
        
        container.register({{ module_info.name }}Router.self) { (_, viewController: {{ module_info.name }}ViewController) in

            let router = {{ module_info.name }}Router()
            router.view = viewController
            
            return router
        }
        
        container.register({{ module_info.name }}ModuleInput.self) { resolver in

            let presenter = {{ module_info.name }}Presenter()

            let viewController = resolver.resolve({{ module_info.name }}ViewController.self, argument: presenter)!

            presenter.view = viewController
            presenter.interactor = resolver.resolve({{ module_info.name }}Interactor.self, argument: presenter)
            presenter.router = resolver.resolve({{ module_info.name }}Router.self, argument: viewController)
            
            return presenter
        }
        
        container.register({{ module_info.name }}ViewController.self) { (_, presenter: {{ module_info.name }}Presenter) in

            //// swiftlint:disable force_cast
            //// swiftlint:enable force_cast

            let viewController = <#T##Create View Controller#>
            viewController.output = presenter
            return viewController
        }

    }
    
}
